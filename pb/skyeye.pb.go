// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: proto/skyeye.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slice []byte `protobuf:"bytes,1,opt,name=slice,proto3" json:"slice,omitempty"`
}

func (x *IP) Reset() {
	*x = IP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_skyeye_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IP) ProtoMessage() {}

func (x *IP) ProtoReflect() protoreflect.Message {
	mi := &file_proto_skyeye_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IP.ProtoReflect.Descriptor instead.
func (*IP) Descriptor() ([]byte, []int) {
	return file_proto_skyeye_proto_rawDescGZIP(), []int{0}
}

func (x *IP) GetSlice() []byte {
	if x != nil {
		return x.Slice
	}
	return nil
}

type ContinuousPingJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId        uint64 `protobuf:"varint,1,opt,name=jobId,proto3" json:"jobId,omitempty"`
	IntervalMs   uint32 `protobuf:"varint,2,opt,name=intervalMs,proto3" json:"intervalMs,omitempty"`
	TimeoutMs    uint32 `protobuf:"varint,3,opt,name=timeoutMs,proto3" json:"timeoutMs,omitempty"`
	Destinations []*IP  `protobuf:"bytes,4,rep,name=destinations,proto3" json:"destinations,omitempty"`
	Count        uint32 `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
	// Types that are assignable to Source:
	//
	//	*ContinuousPingJob_Port
	//	*ContinuousPingJob_Ip
	Source isContinuousPingJob_Source `protobuf_oneof:"source"`
}

func (x *ContinuousPingJob) Reset() {
	*x = ContinuousPingJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_skyeye_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContinuousPingJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContinuousPingJob) ProtoMessage() {}

func (x *ContinuousPingJob) ProtoReflect() protoreflect.Message {
	mi := &file_proto_skyeye_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContinuousPingJob.ProtoReflect.Descriptor instead.
func (*ContinuousPingJob) Descriptor() ([]byte, []int) {
	return file_proto_skyeye_proto_rawDescGZIP(), []int{1}
}

func (x *ContinuousPingJob) GetJobId() uint64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *ContinuousPingJob) GetIntervalMs() uint32 {
	if x != nil {
		return x.IntervalMs
	}
	return 0
}

func (x *ContinuousPingJob) GetTimeoutMs() uint32 {
	if x != nil {
		return x.TimeoutMs
	}
	return 0
}

func (x *ContinuousPingJob) GetDestinations() []*IP {
	if x != nil {
		return x.Destinations
	}
	return nil
}

func (x *ContinuousPingJob) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (m *ContinuousPingJob) GetSource() isContinuousPingJob_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (x *ContinuousPingJob) GetPort() string {
	if x, ok := x.GetSource().(*ContinuousPingJob_Port); ok {
		return x.Port
	}
	return ""
}

func (x *ContinuousPingJob) GetIp() *IP {
	if x, ok := x.GetSource().(*ContinuousPingJob_Ip); ok {
		return x.Ip
	}
	return nil
}

type isContinuousPingJob_Source interface {
	isContinuousPingJob_Source()
}

type ContinuousPingJob_Port struct {
	Port string `protobuf:"bytes,6,opt,name=port,proto3,oneof"`
}

type ContinuousPingJob_Ip struct {
	Ip *IP `protobuf:"bytes,7,opt,name=ip,proto3,oneof"`
}

func (*ContinuousPingJob_Port) isContinuousPingJob_Source() {}

func (*ContinuousPingJob_Ip) isContinuousPingJob_Source() {}

type ContinuousPingResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId      uint64  `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Destination *IP     `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	Count       uint32  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Loss        uint32  `protobuf:"varint,4,opt,name=loss,proto3" json:"loss,omitempty"`
	RttNano     []int64 `protobuf:"varint,5,rep,packed,name=rtt_nano,json=rttNano,proto3" json:"rtt_nano,omitempty"`
}

func (x *ContinuousPingResult) Reset() {
	*x = ContinuousPingResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_skyeye_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContinuousPingResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContinuousPingResult) ProtoMessage() {}

func (x *ContinuousPingResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_skyeye_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContinuousPingResult.ProtoReflect.Descriptor instead.
func (*ContinuousPingResult) Descriptor() ([]byte, []int) {
	return file_proto_skyeye_proto_rawDescGZIP(), []int{2}
}

func (x *ContinuousPingResult) GetTaskId() uint64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *ContinuousPingResult) GetDestination() *IP {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *ContinuousPingResult) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ContinuousPingResult) GetLoss() uint32 {
	if x != nil {
		return x.Loss
	}
	return 0
}

func (x *ContinuousPingResult) GetRttNano() []int64 {
	if x != nil {
		return x.RttNano
	}
	return nil
}

type CancelContinuousJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId uint64 `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
}

func (x *CancelContinuousJob) Reset() {
	*x = CancelContinuousJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_skyeye_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelContinuousJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelContinuousJob) ProtoMessage() {}

func (x *CancelContinuousJob) ProtoReflect() protoreflect.Message {
	mi := &file_proto_skyeye_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelContinuousJob.ProtoReflect.Descriptor instead.
func (*CancelContinuousJob) Descriptor() ([]byte, []int) {
	return file_proto_skyeye_proto_rawDescGZIP(), []int{3}
}

func (x *CancelContinuousJob) GetTaskId() uint64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type ControllerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*ControllerMessage_CancelJob
	//	*ControllerMessage_ContinuousPingJob
	Payload isControllerMessage_Payload `protobuf_oneof:"payload"`
}

func (x *ControllerMessage) Reset() {
	*x = ControllerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_skyeye_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControllerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControllerMessage) ProtoMessage() {}

func (x *ControllerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_skyeye_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControllerMessage.ProtoReflect.Descriptor instead.
func (*ControllerMessage) Descriptor() ([]byte, []int) {
	return file_proto_skyeye_proto_rawDescGZIP(), []int{4}
}

func (m *ControllerMessage) GetPayload() isControllerMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *ControllerMessage) GetCancelJob() *CancelContinuousJob {
	if x, ok := x.GetPayload().(*ControllerMessage_CancelJob); ok {
		return x.CancelJob
	}
	return nil
}

func (x *ControllerMessage) GetContinuousPingJob() *ContinuousPingJob {
	if x, ok := x.GetPayload().(*ControllerMessage_ContinuousPingJob); ok {
		return x.ContinuousPingJob
	}
	return nil
}

type isControllerMessage_Payload interface {
	isControllerMessage_Payload()
}

type ControllerMessage_CancelJob struct {
	CancelJob *CancelContinuousJob `protobuf:"bytes,1,opt,name=cancel_job,json=cancelJob,proto3,oneof"`
}

type ControllerMessage_ContinuousPingJob struct {
	ContinuousPingJob *ContinuousPingJob `protobuf:"bytes,2,opt,name=continuous_ping_job,json=continuousPingJob,proto3,oneof"`
}

func (*ControllerMessage_CancelJob) isControllerMessage_Payload() {}

func (*ControllerMessage_ContinuousPingJob) isControllerMessage_Payload() {}

type Register struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId         string         `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Version         string         `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Capabilities    uint64         `protobuf:"varint,3,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	Hostname        string         `protobuf:"bytes,4,opt,name=hostname,proto3" json:"hostname,omitempty"`
	InterfaceIpaddr map[string]*IP `protobuf:"bytes,5,rep,name=interface_ipaddr,json=interfaceIpaddr,proto3" json:"interface_ipaddr,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Register) Reset() {
	*x = Register{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_skyeye_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Register) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Register) ProtoMessage() {}

func (x *Register) ProtoReflect() protoreflect.Message {
	mi := &file_proto_skyeye_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Register.ProtoReflect.Descriptor instead.
func (*Register) Descriptor() ([]byte, []int) {
	return file_proto_skyeye_proto_rawDescGZIP(), []int{5}
}

func (x *Register) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *Register) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Register) GetCapabilities() uint64 {
	if x != nil {
		return x.Capabilities
	}
	return 0
}

func (x *Register) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Register) GetInterfaceIpaddr() map[string]*IP {
	if x != nil {
		return x.InterfaceIpaddr
	}
	return nil
}

type Heartbeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp uint64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_skyeye_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_skyeye_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_proto_skyeye_proto_rawDescGZIP(), []int{6}
}

func (x *Heartbeat) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type AgentMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*AgentMessage_Register
	//	*AgentMessage_Heartbeat
	//	*AgentMessage_ContinuousPingResult
	Payload isAgentMessage_Payload `protobuf_oneof:"payload"`
}

func (x *AgentMessage) Reset() {
	*x = AgentMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_skyeye_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentMessage) ProtoMessage() {}

func (x *AgentMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_skyeye_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentMessage.ProtoReflect.Descriptor instead.
func (*AgentMessage) Descriptor() ([]byte, []int) {
	return file_proto_skyeye_proto_rawDescGZIP(), []int{7}
}

func (m *AgentMessage) GetPayload() isAgentMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *AgentMessage) GetRegister() *Register {
	if x, ok := x.GetPayload().(*AgentMessage_Register); ok {
		return x.Register
	}
	return nil
}

func (x *AgentMessage) GetHeartbeat() *Heartbeat {
	if x, ok := x.GetPayload().(*AgentMessage_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

func (x *AgentMessage) GetContinuousPingResult() *ContinuousPingResult {
	if x, ok := x.GetPayload().(*AgentMessage_ContinuousPingResult); ok {
		return x.ContinuousPingResult
	}
	return nil
}

type isAgentMessage_Payload interface {
	isAgentMessage_Payload()
}

type AgentMessage_Register struct {
	Register *Register `protobuf:"bytes,1,opt,name=register,proto3,oneof"`
}

type AgentMessage_Heartbeat struct {
	Heartbeat *Heartbeat `protobuf:"bytes,2,opt,name=heartbeat,proto3,oneof"`
}

type AgentMessage_ContinuousPingResult struct {
	ContinuousPingResult *ContinuousPingResult `protobuf:"bytes,3,opt,name=continuous_ping_result,json=continuousPingResult,proto3,oneof"`
}

func (*AgentMessage_Register) isAgentMessage_Payload() {}

func (*AgentMessage_Heartbeat) isAgentMessage_Payload() {}

func (*AgentMessage_ContinuousPingResult) isAgentMessage_Payload() {}

var File_proto_skyeye_proto protoreflect.FileDescriptor

var file_proto_skyeye_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x6b, 0x79, 0x65, 0x79, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x6b, 0x79, 0x65, 0x79, 0x65, 0x22, 0x1a, 0x0a, 0x02,
	0x49, 0x50, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x22, 0xeb, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x50, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x12, 0x14,
	0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6a,
	0x6f, 0x62, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x4d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x4d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4d,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x4d, 0x73, 0x12, 0x2e, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x73, 0x6b, 0x79, 0x65, 0x79,
	0x65, 0x2e, 0x49, 0x50, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1c,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x73, 0x6b, 0x79,
	0x65, 0x79, 0x65, 0x2e, 0x49, 0x50, 0x48, 0x00, 0x52, 0x02, 0x69, 0x70, 0x42, 0x08, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xa2, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x74, 0x69,
	0x6e, 0x75, 0x6f, 0x75, 0x73, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x73, 0x6b, 0x79, 0x65, 0x79, 0x65, 0x2e, 0x49, 0x50, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x6f, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6c, 0x6f, 0x73, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x72, 0x74, 0x74, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x07, 0x72, 0x74, 0x74, 0x4e, 0x61, 0x6e, 0x6f, 0x22, 0x2d, 0x0a, 0x13, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x4a,
	0x6f, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0xa9, 0x01, 0x0a, 0x11, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x3c, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x6b, 0x79, 0x65, 0x79, 0x65, 0x2e, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x4a, 0x6f,
	0x62, 0x48, 0x00, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x12, 0x4b,
	0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x5f, 0x70, 0x69, 0x6e,
	0x67, 0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x6b,
	0x79, 0x65, 0x79, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x50,
	0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x48, 0x00, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e,
	0x75, 0x6f, 0x75, 0x73, 0x50, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x42, 0x09, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xa1, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x6b, 0x79, 0x65, 0x79, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x70,
	0x61, 0x64, 0x64, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x49, 0x70, 0x61, 0x64, 0x64, 0x72, 0x1a, 0x4e, 0x0a, 0x14, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x70, 0x61, 0x64, 0x64, 0x72, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x73, 0x6b, 0x79, 0x65, 0x79, 0x65, 0x2e, 0x49, 0x50, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x29, 0x0a, 0x09, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xd2, 0x01, 0x0a, 0x0c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x6b, 0x79, 0x65, 0x79,
	0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62,
	0x65, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x6b, 0x79, 0x65,
	0x79, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x48, 0x00, 0x52, 0x09,
	0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x54, 0x0a, 0x16, 0x63, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x5f, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x6b, 0x79, 0x65,
	0x79, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x50, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x69,
	0x6e, 0x75, 0x6f, 0x75, 0x73, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42,
	0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x32, 0x52, 0x0a, 0x11, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x3d, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x14, 0x2e, 0x73, 0x6b, 0x79, 0x65,
	0x79, 0x65, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a,
	0x19, 0x2e, 0x73, 0x6b, 0x79, 0x65, 0x79, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x07,
	0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_skyeye_proto_rawDescOnce sync.Once
	file_proto_skyeye_proto_rawDescData = file_proto_skyeye_proto_rawDesc
)

func file_proto_skyeye_proto_rawDescGZIP() []byte {
	file_proto_skyeye_proto_rawDescOnce.Do(func() {
		file_proto_skyeye_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_skyeye_proto_rawDescData)
	})
	return file_proto_skyeye_proto_rawDescData
}

var file_proto_skyeye_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_skyeye_proto_goTypes = []any{
	(*IP)(nil),                   // 0: skyeye.IP
	(*ContinuousPingJob)(nil),    // 1: skyeye.ContinuousPingJob
	(*ContinuousPingResult)(nil), // 2: skyeye.ContinuousPingResult
	(*CancelContinuousJob)(nil),  // 3: skyeye.CancelContinuousJob
	(*ControllerMessage)(nil),    // 4: skyeye.ControllerMessage
	(*Register)(nil),             // 5: skyeye.Register
	(*Heartbeat)(nil),            // 6: skyeye.Heartbeat
	(*AgentMessage)(nil),         // 7: skyeye.AgentMessage
	nil,                          // 8: skyeye.Register.InterfaceIpaddrEntry
}
var file_proto_skyeye_proto_depIdxs = []int32{
	0,  // 0: skyeye.ContinuousPingJob.destinations:type_name -> skyeye.IP
	0,  // 1: skyeye.ContinuousPingJob.ip:type_name -> skyeye.IP
	0,  // 2: skyeye.ContinuousPingResult.destination:type_name -> skyeye.IP
	3,  // 3: skyeye.ControllerMessage.cancel_job:type_name -> skyeye.CancelContinuousJob
	1,  // 4: skyeye.ControllerMessage.continuous_ping_job:type_name -> skyeye.ContinuousPingJob
	8,  // 5: skyeye.Register.interface_ipaddr:type_name -> skyeye.Register.InterfaceIpaddrEntry
	5,  // 6: skyeye.AgentMessage.register:type_name -> skyeye.Register
	6,  // 7: skyeye.AgentMessage.heartbeat:type_name -> skyeye.Heartbeat
	2,  // 8: skyeye.AgentMessage.continuous_ping_result:type_name -> skyeye.ContinuousPingResult
	0,  // 9: skyeye.Register.InterfaceIpaddrEntry.value:type_name -> skyeye.IP
	7,  // 10: skyeye.ManagementService.Stream:input_type -> skyeye.AgentMessage
	4,  // 11: skyeye.ManagementService.Stream:output_type -> skyeye.ControllerMessage
	11, // [11:12] is the sub-list for method output_type
	10, // [10:11] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_skyeye_proto_init() }
func file_proto_skyeye_proto_init() {
	if File_proto_skyeye_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_skyeye_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*IP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_skyeye_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ContinuousPingJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_skyeye_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ContinuousPingResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_skyeye_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CancelContinuousJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_skyeye_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ControllerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_skyeye_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Register); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_skyeye_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Heartbeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_skyeye_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*AgentMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_skyeye_proto_msgTypes[1].OneofWrappers = []any{
		(*ContinuousPingJob_Port)(nil),
		(*ContinuousPingJob_Ip)(nil),
	}
	file_proto_skyeye_proto_msgTypes[4].OneofWrappers = []any{
		(*ControllerMessage_CancelJob)(nil),
		(*ControllerMessage_ContinuousPingJob)(nil),
	}
	file_proto_skyeye_proto_msgTypes[7].OneofWrappers = []any{
		(*AgentMessage_Register)(nil),
		(*AgentMessage_Heartbeat)(nil),
		(*AgentMessage_ContinuousPingResult)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_skyeye_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_skyeye_proto_goTypes,
		DependencyIndexes: file_proto_skyeye_proto_depIdxs,
		MessageInfos:      file_proto_skyeye_proto_msgTypes,
	}.Build()
	File_proto_skyeye_proto = out.File
	file_proto_skyeye_proto_rawDesc = nil
	file_proto_skyeye_proto_goTypes = nil
	file_proto_skyeye_proto_depIdxs = nil
}
